{"is_source_file": true, "format": "Dart", "description": "Service for handling local SQLite database operations in a reservation management app.", "external_files": ["package:sqflite/sqflite.dart", "package:path/path.dart", "../models/reservation_model.dart"], "external_methods": ["getDatabasesPath()", "openDatabase(String, {int version, Future Function(Database, int) onCreate})", "Reservation.fromMap(Map<String, dynamic>)"], "published": ["insertReservation(Reservation reservation)", "updateReservation(Reservation reservation)", "deleteReservation(String id)", "getReservations()", "getReservationById(String id)", "getReservationsByUserId(String userId)", "getUpcomingReservations()"], "classes": [{"name": "DatabaseService", "description": "Singleton service class that manages SQLite database operations including initialization, inserting, updating, deleting, and querying reservations."}], "methods": [{"name": "get database", "description": "Async getter that returns the database instance, initializing it if necessary."}, {"name": "_initDatabase()", "description": "Initializes the SQLite database and creates the reservations table."}, {"name": "_createDb(Database db, int version)", "description": "Creates the database tables necessary for managing reservations."}], "calls": ["join(String, String)", "db.execute(String)", "db.insert(String, Map<String, dynamic>, {String conflictAlgorithm})", "db.update(String, Map<String, dynamic>, {String where, List whereArgs})", "db.delete(String, {String where, List whereArgs})", "db.query(String, {String where, List whereArgs})"], "search-terms": ["DatabaseService", "SQLite", "reservations"], "state": 2, "file_id": 55, "knowledge_revision": 116, "git_revision": "", "filename": "/home/kavia/workspace/reservation-app/reservation_management/lib/services/database_service.dart", "hash": "97aff6c44796379d36e2d06c55c177b2", "format-version": 4, "code-base-name": "default", "revision_history": [{"116": ""}]}